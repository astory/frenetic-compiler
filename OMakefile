################################################################################
# The Frenetic Project                                                         #
# frenetic@frenetic-lang.org                                                   #
################################################################################
# Copyright (C) 2011 Cornell University                                        #
#                                                                              #
# This program is free software: you can redistribute it and/or modify         #
# it under the terms of the GNU General Public License version 3 as            #
# published by the Free Software Foundation.                                   #
#                                                                              #
# This program is distributed in the hope that it will be useful,              #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.        #
################################################################################
# /src/OMakefile                                                               #
# Top-level OMakefile                                                          #
# $Id$ #
################################################################################

RESULT = frenetic

.DEFAULT: $(RESULT)$(EXE)

##############################################################################
# Basic configuration

NATIVE_ENABLED = true
USE_OCAMLFIND = true
OCAMLFLAGS    = -dtypes -rectypes
OCAMLPACKS += num str unix
OCAMLYACC = ocamlyacc -v
MAKE = make

if $(equal $(OSTYPE), Linux)
	OCAMLOPTFLAGS += -ccopt static

if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind\, but it was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

##############################################################################
# Library configuration

FBASEDIR = $(dir fbase)

OCAML_LIBS += $(FBASEDIR)/fbase 
OCAMLINCLUDES += $(FBASEDIR) 

##############################################################################
# Sources

FRENETIC_BASE_SOURCES[] = \
    id.mli id.ml \
    syntax.mli syntax.ml \
    prefs.mli prefs.ml \
    parser.mly lexer.mll \
    toplevel.ml 

FRENETIC_SOURCES = $(file $(FRENETIC_BASE_SOURCES)) frenetic.ml

OCamlProgram($(RESULT), $(rootname $(FRENETIC_SOURCES)))

GENERATED_FILES = parser.ml parser.mli lexer.ml

OCamlGeneratedFiles($(GENERATED_FILES))

##############################################################################
# Clean up

.PHONY: clean distclean

CLEAN = rm -rf *.tmp *.cmx *.cmi *.cmo *.o *.annot *.opt *.a *.cma *.cmxa \
          *.output $(GENERATED_FILES) $(RESULT)

DISTCLEAN = $(CLEAN) *.omc

clean:
	$(CLEAN)

distclean:
	$(DISTCLEAN)

##############################################################################
# Sub-directories

SUBDIRS = fbase

.SUBDIRS: $(SUBDIRS)
